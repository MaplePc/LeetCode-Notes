Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum ≥ s. If there isn't one, return 0 instead.

For example, given the array [2,3,1,2,4,3] and s = 7,
the subarray [4,3] has the minimal length under the problem constraint.
==========================================
class Solution {
    public int minSubArrayLen(int s, int[] nums) {
        int len = nums.length;
        int minLen = len;
        
        int sum = 0;
        int left = 0;
        for(int i = 0; i < len; i++){
            sum += nums[i];
            if(sum < s)
                continue;
            else if(sum > s){ //尝试缩减长度
                while(left < i && sum - nums[left] >= s){
                    sum -= nums[left++];
                }
            }
            
            if(i - left + 1 < minLen) //记录更小的长度
                minLen = i - left + 1;
        }
        
        if(sum < s)
            return 0;
        else
            return minLen;
    }
}

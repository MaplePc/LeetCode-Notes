Suppose an array sorted in ascending order is rotated at some pivot (one pivot actually) unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.
============================================================
class Solution {
    public int search(int[] nums, int target) {
        int len = nums.length;
        if(len == 0)
            return -1;
        int l = 0;
        int r = len - 1;
        int mid = 0;
        while(l < r){
            mid = l + (r - l) / 2;
            if(nums[l] < nums[r]){  //升序序列
                if(target > nums[mid])
                    l = mid + 1;
                else if(target < nums[mid])
                    r = mid - 1;
                else
                    return mid;
            }
            else{
                if(nums[mid] >= nums[l]){ //序列首尾交界在右边, mid可能==l
                    if(target > nums[mid] || target < nums[l])
                        l = mid + 1;
                    else
                        r = mid;
                }
                else{                    //序列首尾交界在左边
                    if(target < nums[mid] || target > nums[r])
                        r = mid - 1;
                    else
                        l = mid;
                }    
            }
        }
        if(nums[l] == target)
            return l;
        else
            return -1;
    }
}
//55%

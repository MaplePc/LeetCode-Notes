Suppose an array sorted in ascending order is rotated at some pivot (one pivot actually) unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.
============================================================
class Solution {
    public int search(int[] nums, int tar) {
        int len = nums.length;
        if(len == 0)
            return -1;
        int l = 0;
        int r = len - 1;
        int mid = 0;
        while(l <= r){
            mid = (r + l) / 2;
            if(tar == nums[mid])
                return mid;
            else if(nums[l] <= nums[mid]){ //注意这里的等号, 左边有序
                if(tar < nums[l] || tar > nums[mid])
                    l = mid + 1;
                else 
                    r = mid - 1;
            }
            else{ //右边有序
                if(tar < nums[mid] || tar > nums[r])
                    r = mid - 1;
                else
                    l = mid + 1;
            }
        }
        return -1;
    }
}
//28%-50%

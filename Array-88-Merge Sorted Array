Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

Note:
You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2. 
The number of elements initialized in nums1 and nums2 are m and n respectively.
=====================================================================
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) { 
        if(m == 0){
            for(int i = 0; i < n; i++){
                nums1[m++] = nums2[i];
            }
            return;
        }    
            
        for(int i = 0; i < n; i++){
            int insertPos = binarySearch(nums1, m, nums2[i]);
            for(int j = m; j > insertPos; j--){ //移动插入位置后面的元素
                nums1[j] = nums1[j - 1];
            }
            nums1[insertPos] = nums2[i];
            m++;
        }
    }
    public int binarySearch(int[] nums, int r, int target){ //折半查找插入位置
        int l = 0;
        int mid = 0;
        while(l < r){
            mid = l + (r - l) / 2;
            if(target >= nums[mid]){
                l = mid + 1;
            }
            else{
                r = mid;
            }
        }
        return l;
    }
}

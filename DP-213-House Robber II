Note: This is an extension of House Robber.

After robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street.

Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.

Credits:
Special thanks to @Freezen for adding this problem and creating all test cases.
===========================================
class Solution {
    public int rob(int[] nums){
        if(nums.length == 1)
            return nums[0];
        return Math.max(helper(nums, 0, nums.length - 1), helper(nums, 1, nums.length));
	}
	public int helper(int[] nums, int start, int end){
		int cur = 0, pre = 0;
		for(int i = start; i < end; i++){
			int temp = cur;
			cur = Math.max(cur, pre + nums[i]);
			pre = temp;
		}
		return cur;
	}
}
//80%-100%

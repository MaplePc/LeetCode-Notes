A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).

The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).

How many possible unique paths are there?


Above is a 3 x 7 grid. How many possible unique paths are there?

Note: m and n will be at most 100.
============================================
class Solution {
    public int uniquePaths(int m, int n) {
        int[] arr = new int[n]; //只需一维数组
        arr[n - 1] = 1; //目标点到自身的路径数目, 定义为1
        for(int i = 0; i < m; i++){ //需要计算的行数
            for(int j = n - 2; j > -1; j--){ //对于每一行的非最后一个元素,将下一行相邻的元素的路径数+当前行相邻后一个元素的路径数,作为当前元素的路径数
                arr[j] += arr[j + 1];
            }
        }
        return arr[0];
    }
}
//80%(第一个柱形)

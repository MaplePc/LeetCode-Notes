Write a program to find the n-th ugly number.

Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. For example, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.

Note that 1 is typically treated as an ugly number, and n does not exceed 1690.

Credits:
Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.
===================================
class Solution {
	public int nthUglyNumber(final int n) {
		if (n < 6)
			return n;
		int[][] dp = new int[][] { { 2, 3, 5 }, { 1, 1, 1 }, { 2, 3, 5 } }; //三个一位数组的含义: 因数, 在data中的下标, 积
		int[] data = new int[n + 1];
		data[1] = 1;
		for (int i = 2; i <= n; i++) { //执行n-1次
			int min = Math.min(dp[2][0], Math.min(dp[2][1], dp[2][2]));
			data[i] = min;
			for (int j = 0; j < 3; j++) //列号
				if (dp[2][j] == min) {
					dp[1][j]++;
					dp[2][j] = dp[0][j] * data[dp[1][j]];
				}
		}
		return data[n];
	}
}
//30%, 主流的做法

Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example:

Input: "babad"

Output: "bab"

Note: "aba" is also a valid answer.
 

Example:

Input: "cbbd"

Output: "bb"
=========================================================
class Solution {
    public String longestPalindrome(String s) {
			int max = 1;
			int start = 0;
			int len1 = s.length() - 1;
			char[] cs = s.toCharArray();
			for(int i = 0; i < len1;){
				int l = i - 1;
				int r = i;
				while(r < len1 && cs[r] == cs[r + 1]){ //跳过相等的元素
					r++;
				}//此时r后面没有元素或[r]!=[r+1]
				r++; 
				i = r; //下一次回文串搜索: 从第一个与左边连续相等的元素不等的元素开始
				while(l > -1 && r <= len1 && cs[r] == cs[l]){
					l--;
					r++;
				}
				if(r - l - 1 > max){
					max = r - l - 1;
					start = l + 1;
				}
			}
			return s.substring(start, start + max);
		}
}
//优化了回文串中间连续相等字符的情况, O(n2), 70%-90%

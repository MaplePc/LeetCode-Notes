Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example:

Input: "babad"

Output: "bab"

Note: "aba" is also a valid answer.
 

Example:

Input: "cbbd"

Output: "bb"
=========================================================
class Solution {
    public String longestPalindrome(String s) {
			final int len1 = s.length() - 1;
			int max = 1; //回文串的长度
			int maxL = -1;
			int maxR = -1;
			for (int i = 0; i < len1; i++) { //回文串的中间
				//情况一: 回文串是偶数个字符
				int l = i;
				int r = i + 1;
				while (l > -1 && r <= len1 && s.charAt(l) == s.charAt(r)) { //贪婪搜索
					l--;
					r++;
				}
				if (r - l - 1 > max) { //回文串终止
					max = r - l - 1;
					maxL = l + 1;
					maxR = r - 1;
				}

				//情况二: 回文串有奇数个字符
				l = i - 1;
				r = i + 1;
				while (l > -1 && r <= len1 && s.charAt(l) == s.charAt(r)) { //贪婪搜索
					l--;
					r++;
				}
				if (r - l - 1 > max) {
					max = r - l - 1;
					maxL = l + 1;
					maxR = r - 1;
				}
			}
			if (max > 1) 
				return s.substring(maxL, maxR + 1);
			return s.substring(len1, len1 + 1);
    }
}
// O(n2), 30%

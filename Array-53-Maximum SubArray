
Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.
============================================
class Solution {
    public int maxSubArray(int[] nums) {
        int sum = 0;
        int max = Integer.MIN_VALUE; //令max取整数的最小值, 主要用于从负数中挑选最大值
        for (int i = 0; i < nums.length; i++){
            sum = sum + nums[i]; //对nums数组里面的每一个元素求和
            if (sum > max){ //如果求和结果>max
                max = sum;
            }
            if (sum <= 0){ //如果求和结果<=0,为下一个子数组初始化sum的值(子数组第一个元素必须是正数)
                sum = 0;
            }
        }
        return max;
    }
}

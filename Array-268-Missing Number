Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.

For example,
Given nums = [0, 1, 3] return 2.

Note:
Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?
===============================
class Solution {
    public int missingNumber(int[] nums) { //寻找丢失的数应该存在的位置
        int len = nums.length;
        boolean[] hash = new boolean[len + 1];
        for(int v : nums)
            hash[v] = true;
        for(int i = 0; i < len + 1; i++){
            if(!hash[i])
                return i;
        }
        return 0;
    }
}
//22%, 第二个柱形

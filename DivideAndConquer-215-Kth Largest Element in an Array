class Solution {
    public int findKthLargest(int[] nums, int k) {
        int half = nums.length / 2;
        int last;
        if(k < half){
            last = nums.length - k;
            for(int i = nums.length - 1; i >= last; i--){
                for(int j = 0; j < i; j++){
                    if(nums[j] > nums[j + 1])
                        swap(nums, j);
                }
            }
        }
        else{
            last = nums.length - k;
            for(int i = 0; i <= last; i++){
                for(int j = nums.length - 1; j > i; j--){
                    if(nums[j] < nums[j - 1])
                        swap(nums, j - 1);
                }
            }
        }
        return nums[last];
    }
    
    public void swap(int[] arr, int i){
        int temp = arr[i];
        arr[i] = arr[i + 1];
        arr[i + 1] = temp;
    }
}
//35%

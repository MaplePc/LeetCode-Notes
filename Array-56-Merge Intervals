Given a collection of intervals, merge all overlapping intervals.

For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18].
===============================================
class Solution {
    public List<Interval> merge(List<Interval> intervals) {
        int len = intervals.size();
        if(len == 0)
            return intervals;
        int[] start = new int[len];
        int[] end = new int[len];
        int j = 0;
        for(Interval v : intervals){
            start[j] = v.start;
            end[j++] = v.end;
        }
        
        Arrays.sort(start);
        Arrays.sort(end);
        
        List<Interval> res = new LinkedList<>();
        j = 0; //当前区间的start数组中的下标
        for(int i = 1; i < len; i++){
            if(start[i] > end[i - 1]){ //当一个区间的start大于上一个区间的end,说明一个新的区间开始了
                res.add(new Interval(start[j], end[i - 1])); //当前区间合并结束
                j = i; //新区间的start数组中的下标
            }
        }        
        res.add(new Interval(start[j], end[len - 1])); //最后一个区间

        return res;
    }
}
//97%

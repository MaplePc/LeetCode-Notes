Rotate an array of n elements to the right by k steps.

For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].

Note:
Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.
==============================================================

class Solution {
    public void rotate(int[] nums, int k) {
        int len = nums.length;
        if(len < 2 || k % len == 0){
            return;
        }
        k = k % len;
        if(k < len / 2){ //复制后半部分, 移动前半部分
            int[] copy = new int[k];
            
            for(int i = len - k; i < len; i++){
                copy[i - (len - k)] = nums[i];
            }
            for(int i = len - k - 1; i > -1; i--){
                nums[i + k] = nums[i];
            }
            for(int i = 0; i < k; i++){
                nums[i] = copy[i];
            }
        }
        else{   //复制前半部分, 移动后半部分
            k = len - k;
            int[] copy = new int[k];
            
            for(int i = 0; i < k; i++){
                copy[i] = nums[i];
            }
            for(int i = k; i < len; i++){
                nums[i - k] = nums[i];
            }
            for(int i = len - k; i < len; i++){
                nums[i] = copy[i - (len - k)];
            }
        }
    }
}
//1ms-2ms

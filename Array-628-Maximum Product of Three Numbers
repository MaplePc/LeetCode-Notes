Given an integer array, find three numbers whose product is maximum and output the maximum product.

Example 1:
Input: [1,2,3]
Output: 6
Example 2:
Input: [1,2,3,4]
Output: 24
Note:
The length of the given array will be in range [3,104] and all elements are in the range [-1000, 1000].
Multiplication of any three numbers in the input won't exceed the range of 32-bit signed integer.
==============================================
class Solution {
    public int maximumProduct(int[] nums) {
        int len = nums.length;
        int max_1 = Integer.MIN_VALUE; //最大值
        int max_2 = Integer.MIN_VALUE; //次大值
        int max_3 = Integer.MIN_VALUE; //第三大值
        int minus_min_1 = 0;    //最小的负数
        int minus_min_2 = 0;    //次小的负数
        for(int v : nums){
            if(v >= max_1){
                max_3 = max_2;
                max_2 = max_1;
                max_1 = v;
            }
            else if(v >= max_2){
                max_3 = max_2;
                max_2 = v;
            }
            else if(v >= max_3)
                max_3 = v;
            if(v < 0){
                if(v <= minus_min_1){
                    minus_min_2 = minus_min_1;
                    minus_min_1 = v;
                }
                else if(v <= minus_min_2)
                    minus_min_2 = v;
            }
        }
        return Math.max(max_1 * max_2 * max_3, minus_min_1 * minus_min_2 * max_1); 
    }
    
}
//90+%

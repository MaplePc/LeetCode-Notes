Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in place.

click to show follow up.

Follow up:
Did you use extra space?
A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?
========================================
class Solution {
    public void setZeroes(int[][] m) {
        int row = m.length;
        int col = m[0].length;
        
        boolean[] r = new boolean[row];
        boolean[] c = new boolean[col];
        
        for(int i = 0; i < row; i++){
            for(int j = 0; j < col; j++){
                if(m[i][j] == 0){
                    r[i] = true;
                    c[j] = true;
                }
            }
        }
        
        for(int i = 0; i < row; i++){ 
            if(r[i]){ //将一行置0
                for(int j = 0; j < col; j++){
                    m[i][j] = 0;
                }
            }
        }
        for(int j = 0; j < col; j++){ 
            if(c[j]){ //将一列置零
                for(int i = 0; i < row; i++){
                    m[i][j] = 0;
                }
            }
        }
    }
}
//80%

Given an array of integers and an integer k, find out whether there are two distinct indices i and j 
in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.
=============================================
class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        int N = nums.length;
        if (k >= 35000) return false;
        int i = 0;
        for (int num: nums){
            for (int j = Math.min(i+k, N-1); j>i; --j)
                if (nums[j] == num) return true;
            ++i;
        }
        return false;
    }
}
//99% GG,O(n2)的算法都打败了绝大多数解法(包括许多时间复杂度O(n)的), 说明数据集n太小了

//这道题: 蛮力法O(n2) < HashSet O(n) < 对二维数组或构造带下标和值的新类进行排序 < HashMap, 
//另外Hash数组的方法失效了, 因为有一组数据分别设置了Integer.MAXVALUE和Integer.MINVALUE

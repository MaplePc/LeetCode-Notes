Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.

For example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.

Credits:
Special thanks to @jianchao.li.fighter for adding this problem and creating all test cases.
================================================
class Solution {
    public int numSquares(final int n) {
        int[] dp = new int[n + 1];
        for(int i = 1; i <= n; i++){
            int min = Integer.MAX_VALUE;
            for(int j = 1; j * j <= i; j++)
                min = Math.min(min, dp[i - j * j] + 1);
            dp[i] = min;
        }
        return dp[n];
	}
}
//74%, O(n2)
//从1迭代dp到n, 对于每个值, 分解成两部分: 1(某个数的平方a) + dp[该值-a]

Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].

Note:
You must do this in-place without making a copy of the array.
Minimize the total number of operations.
=======================================================
class Solution {
    public void moveZeroes(int[] nums) {
        int len = nums.length;
        int offset = 0; //每遇到一个0, 其后的所有元素都需要往前挪的距离
        boolean start = false; //一段非零的序列是否存在
        int startI = 0; //非零序列的其实下标
        for(int i = 0; i < len; i++){
            if(nums[i] == 0){
                if(start)
                    System.arraycopy(nums, startI, nums, startI - offset, i - startI); //数组复制
                start = false;
                offset++;
            }
            else{
                if(!start){ //非零序列开始
                    start = true;
                    startI = i;
                }
            }
        }
        if(start)
            System.arraycopy(nums, startI, nums, startI - offset, len - startI);
        //start
        Arrays.fill(nums, len - offset, len, 0);    //往[len-offset, len)范围内的元素填充0
    }
}
//22%

class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        int len = nums.length;
        List<List<Integer>> res = new ArrayList<>();
        if(len == 0)
            return res;
        
        res.add(new ArrayList<Integer>()); //添加空集
        
        //使用迭代增加的方式, 最开始的时候子集集合里只包含空集, 然后以后每次引入一个新的元素, 
        //都把现有的所有子集复制一份, 然后把新元素加到这些复制的子集的最后, 再把这些子集添加到子集集合中
        for(int i = 0; i < len; i++){
            int setSize = res.size();
            for(int j = 0; j < setSize; j++){
                ArrayList<Integer> set = new ArrayList<>(res.get(j));
                set.add(nums[i]);
                
                res.add(set);
            }
        }
        
        return res;
    }
}
//51%(第一个柱形)
//可以从Expected answer中找规律

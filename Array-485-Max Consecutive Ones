Given a binary array, find the maximum number of consecutive 1s in this array.

Example 1:
Input: [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or the last three digits are consecutive 1s.
    The maximum number of consecutive 1s is 3.
Note:

The input array will only contain 0 and 1.
The length of input array is a positive integer and will not exceed 10,000
==========================================
class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {
        int len = nums.length;
        int startI = -1;
        int max = 0;
        for(int i = 0; i < len; i++){
            if(nums[i] == 1){
                if(startI == -1){ //一个连续序列的第一个1
                    startI = i;
                }
            }
            else{
                if(startI > -1){    //一个序列因遇到0而结束
                    int l = i - startI;
                    startI = -1;
                    max = l > max ? l : max;
                }
            }
        }
        if(startI > -1){ //一个序列因nums数组结束而自然结束
            int l = len - startI;
            max = l > max ? l :max;
        }
        return max;
    }
}
//50%
